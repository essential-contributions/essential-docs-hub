import{_ as t,c as a,a0 as s,o as r}from"./chunks/framework.DxQyBxTE.js";const p=JSON.parse('{"title":"User Data","description":"","frontmatter":{},"headers":[],"relativePath":"protocol/user-data.md","filePath":"protocol/user-data.md"}'),o={name:"protocol/user-data.md"};function n(i,e,l,c,d,h){return r(),a("div",null,e[0]||(e[0]=[s('<h1 id="user-data" tabindex="-1">User Data <a class="header-anchor" href="#user-data" aria-label="Permalink to &quot;User Data&quot;">​</a></h1><p>In Essential, <strong>User Data</strong> is the means by which users interact with the blockchain’s state. This is where the user <strong>expresses their intent</strong> for state changes. The term <strong>user data</strong> refers specifically to the parts of a solution that are <strong>fully constrained by the user</strong>.</p><p>For example, consider a token swap:</p><ul><li>A user with a certain amount of Token A wants to swap it for Token B.</li><li>They can constrain specific parameters: the addresses of Token A and B, and the amount of Token A they wish to exchange.</li><li>However, they may leave the amount of Token B to receive unconstrained, allowing the <strong>solver</strong> to maximize it based on market conditions.</li></ul><p>User data is <strong>signed by the user</strong>, linking it directly to authentication. If any value in the user data (e.g., transfer amount, &quot;from&quot; or &quot;to&quot; addresses) is altered, the signature becomes invalid, thereby <strong>ensuring data integrity</strong>.</p>',5)]))}const g=t(o,[["render",n]]);export{p as __pageData,g as default};
